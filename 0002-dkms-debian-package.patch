From 82d537608298983f27e6c9310d29753ce3c7364c Mon Sep 17 00:00:00 2001
From: G Davey <support@aps-networks.com>
Date: Fri, 8 Jan 2021 11:56:28 +0000
Subject: [PATCH] Added files to create DKMS Debian package

---
 debian/changelog     |   5 ++
 debian/compat        |   1 +
 debian/control       |   8 ++
 debian/files         |   2 +
 debian/igb-dkms.dkms |   8 ++
 debian/rules         |  18 +++++
 src/Makefile         | 180 ++++++-------------------------------------
 7 files changed, 64 insertions(+), 158 deletions(-)
 create mode 100644 debian/changelog
 create mode 100644 debian/compat
 create mode 100644 debian/control
 create mode 100644 debian/files
 create mode 100644 debian/igb-dkms.dkms
 create mode 100755 debian/rules

diff --git a/debian/changelog b/debian/changelog
new file mode 100644
index 0000000..9ef08cc
--- /dev/null
+++ b/debian/changelog
@@ -0,0 +1,5 @@
+igb-dkms (5.4.6-0) unstable; urgency=medium
+
+  * Initial package.
+
+  -- APS-Networks <support@aps-networks.com>  Tue, 5 Jan 2021 11:16:32 +0000
\ No newline at end of file
diff --git a/debian/compat b/debian/compat
new file mode 100644
index 0000000..ec63514
--- /dev/null
+++ b/debian/compat
@@ -0,0 +1 @@
+9
diff --git a/debian/control b/debian/control
new file mode 100644
index 0000000..3c8bbef
--- /dev/null
+++ b/debian/control
@@ -0,0 +1,8 @@
+Source: igb-dkms
+Maintainer: APS Networks <support@aps-networks.com>
+Build-Depends: debhelper (>= 9), dkms
+
+Package: igb-dkms
+Architecture: all
+Depends: ${misc:Depends}
+Description: DKMS source for the Intel igb network driver
diff --git a/debian/files b/debian/files
new file mode 100644
index 0000000..62295eb
--- /dev/null
+++ b/debian/files
@@ -0,0 +1,2 @@
+igb-dkms_5.4.6-0_all.deb - -
+igb-dkms_5.4.6-0_amd64.buildinfo - -
diff --git a/debian/igb-dkms.dkms b/debian/igb-dkms.dkms
new file mode 100644
index 0000000..fac6e32
--- /dev/null
+++ b/debian/igb-dkms.dkms
@@ -0,0 +1,8 @@
+PACKAGE_NAME="igb"
+PACKAGE_VERSION="#MODULE_VERSION#"
+CLEAN="make clean"
+MAKE[0]="make all KVERSION=$kernelver"
+BUILT_MODULE_NAME[0]="$PACKAGE_NAME"
+DEST_MODULE_LOCATION[0]="/kernel/drivers/net/ethernet/intel/igb"
+AUTOINSTALL="YES"
+REMAKE_INITRD="YES"
\ No newline at end of file
diff --git a/debian/rules b/debian/rules
new file mode 100755
index 0000000..c1dfeaf
--- /dev/null
+++ b/debian/rules
@@ -0,0 +1,18 @@
+#!/usr/bin/make -f
+
+include /usr/share/dpkg/pkg-info.mk
+
+%:
+	dh $@ --with dkms
+
+override_dh_install:
+	dh_install src/* usr/src/igb-$(DEB_VERSION_UPSTREAM)/
+
+override_dh_dkms:
+	dh_dkms -V $(DEB_VERSION_UPSTREAM)
+
+override_dh_auto_configure:
+override_dh_auto_build:
+override_dh_auto_test:
+override_dh_auto_install:
+override_dh_auto_clean:
diff --git a/src/Makefile b/src/Makefile
index 811a634..d543900 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -1,170 +1,34 @@
 # SPDX-License-Identifier: GPL-2.0
-# Copyright(c) 2007 - 2020 Intel Corporation.
-
-ifneq ($(KERNELRELEASE),)
-# kbuild part of makefile
+# Copyright(c) 1999 - 2018 Intel Corporation.
 #
-# Makefile for the Intel(R) Gigabit Ethernet Linux Driver
+# Makefile for the Intel(R) 82575 PCI-Express ethernet driver
 #
 
 obj-$(CONFIG_IGB) += igb.o
 
-define igb-y
-	igb_main.o
-	e1000_api.o
-	igb_ethtool.o
-	igb_hwmon.o
-	e1000_mbx.o
-	e1000_mac.o
-	e1000_manage.o
-	e1000_nvm.o
-	igb_param.o
-	e1000_phy.o
-	igb_procfs.o
-	igb_vmdq.o
-	e1000_82575.o
+igb-objs :=	igb_main.o \
+	e1000_api.o \
+	igb_ethtool.o \
+	igb_hwmon.o \
+	e1000_mbx.o \
+	e1000_mac.o \
+	e1000_manage.o \
+	e1000_nvm.o \
+	igb_param.o \
+	e1000_phy.o \
+	igb_procfs.o \
+	igb_vmdq.o \
+	e1000_82575.o \
 	e1000_i210.o
-endef
-igb-y := $(strip ${igb-y})
-
-igb-${CONFIG_DEBUG_FS} += igb_debugfs.o
-
-igb-$(CONFIG_PTP_1588_CLOCK:m=y) += igb_ptp.o
-
-
-igb-y += kcompat.o
-
-else	# ifneq($(KERNELRELEASE),)
-# normal makefile
-
-DRIVER := igb
 
-ifeq (,$(wildcard common.mk))
-  $(error Cannot find common.mk build rules)
-else
-  include common.mk
-endif
-
-# Check that kernel version is at least 2.4.21
-ifeq (0,$(shell [ ${KVER_CODE} -lt $(call get_kvercode,2,4,17) ]; echo "$?"))
-  $(warning *** Aborting the build.)
-  $(error This driver is not supported on kernel versions older than 2.4.17)
-endif
-
-# Command to update initramfs or display a warning message
-ifeq (${cmd_initrd},)
-  define cmd_initramfs
-  echo "Unable to update initramfs. You may need to do this manually."
-endef
-else
-  define cmd_initramfs
-  @echo "Updating initramfs..."
-  -@$(call cmd_initrd)
-endef
-endif
-
-######################
-# Kernel Build Macro #
-######################
-
-# customized kernelbuild function
-#
-# ${1} is the kernel build target
-# ${2} may contain extra rules to pass to kernelbuild macro
-#
-# We customize the kernelbuild target in order to provide our hack to disable
-# CONFIG_PTP_1588_CLOCK support should -DNO_PTP_SUPPORT be defined in the extra
-# cflags given on the command line.
-devkernelbuild = $(call kernelbuild,$(if $(filter -DNO_PTP_SUPPORT,${EXTRA_CFLAGS}),CONFIG_PTP_1588_CLOCK=n) ${2},${1})
+KDIR     := /lib/modules/$(KVERSION)/build
 
-###############
-# Build rules #
-###############
+# igb-$(CONFIG_PTP_1588_CLOCK:m=y) += igb_ptp.o
+igb-m += igb_ptp.o
 
-# Standard compilation, with regular output
-default:
-	@+$(call devkernelbuild,modules)
+all:
+	$(MAKE) -C $(KDIR) M=$(PWD) modules
 
-# Noisy output, for extra debugging
-noisy:
-	@+$(call devkernelbuild,modules,V=1)
-
-# Silence any output generated
-silent:
-	@+$(call devkernelbuild,modules,>/dev/null)
-
-# Enable higher warning level
-checkwarnings: clean
-	@+$(call devkernelbuild,modules,W=1)
-
-# Run sparse static analyzer
-sparse: clean
-	@+$(call devkernelbuild,modules,C=2 CF="-D__CHECK_ENDIAN__ -Wbitwise -Wcontext")
-
-# Run coccicheck static analyzer
-ccc: clean
-	@+$(call devkernelbuild,modules,coccicheck MODE=report))
-
-# Build manfiles
-manfile:
-	@gzip -c ../${DRIVER}.${MANSECTION} > ${DRIVER}.${MANSECTION}.gz
-
-# Clean the module subdirectories
 clean:
-	@+$(call devkernelbuild,clean)
-	@-rm -rf *.${MANSECTION}.gz *.ko
-
-# Install the modules and manpage
-install: default manfile
-	@echo "Copying manpages..."
-	@install -D -m 644 ${DRIVER}.${MANSECTION}.gz ${INSTALL_MOD_PATH}${MANDIR}/man${MANSECTION}/${DRIVER}.${MANSECTION}.gz
-	@echo "Installing modules..."
-	@+$(call devkernelbuild,modules_install)
-	@echo "Running depmod..."
-	@$(call cmd_depmod)
-	$(call cmd_initramfs)
-
-# Target used by rpmbuild spec file
-rpm: default manfile
-	@install -D -m 644 ${DRIVER}.${MANSECTION}.gz ${INSTALL_MOD_PATH}${MANDIR}/man${MANSECTION}/${DRIVER}.${MANSECTION}.gz
-	@install -D -m 644 ${DRIVER}.ko ${INSTALL_MOD_PATH}/lib/modules/${KVER}/${INSTALL_MOD_DIR}/${DRIVER}.ko
-
-uninstall:
-	rm -f ${INSTALL_MOD_PATH}/lib/modules/${KVER}/${INSTALL_MOD_DIR}/${DRIVER}.ko;
-	if [ -e ${INSTALL_MOD_PATH}${MANDIR}/man${MANSECTION}/${DRIVER}.${MANSECTION}.gz ] ; then \
-		rm -f ${INSTALL_MOD_PATH}${MANDIR}/man${MANSECTION}/${DRIVER}.${MANSECTION}.gz ; \
-	fi;
-	$(call cmd_depmod)
-	$(call cmd_initramfs)
-
-########
-# Help #
-########
-help:
-	@echo 'Cleaning targets:'
-	@echo '  clean               - Clean files generated by kernel module build'
-	@echo 'Build targets:'
-	@echo '  default             - Build module(s) with standard verbosity'
-	@echo '  noisy               - Build module(s) with V=1 verbosity -- very noisy'
-	@echo '  silent              - Build module(s), squelching all output'
-	@echo 'Static Analysis:'
-	@echo '  checkwarnings       - Clean, then build module(s) with W=1 warnings enabled'
-	@echo '  sparse              - Clean, then check module(s) using sparse'
-	@echo '  ccc                 - Clean, then check module(s) using coccicheck'
-	@echo 'Other targets:'
-	@echo '  manfile             - Generate a gzipped manpage'
-	@echo '  install             - Build then install the module(s) and manpage, and update initramfs'
-	@echo '  uninstall           - Uninstall the module(s) and manpage, and update initramfs'
-	@echo '  help                - Display this help message'
-	@echo 'Variables:'
-	@echo '  LINUX_VERSION       - Debug tool to force kernel LINUX_VERSION_CODE. Use at your own risk.'
-	@echo '  W=N                 - Kernel variable for setting warning levels'
-	@echo '  V=N                 - Kernel variable for setting output verbosity'
-	@echo '  INSTALL_MOD_PATH    - Add prefix for the module and manpage installation path'
-	@echo '  INSTALL_MOD_DIR     - Use module directory other than updates/drivers/net/ethernet/intel/${DRIVER}'
-	@echo ' Other variables may be available for tuning make process, see'
-	@echo ' Kernel Kbuild documentation for more information'
-
-.PHONY: default noisy clean manfile silent sparse ccc install uninstall help
-
-endif	# ifneq($(KERNELRELEASE),)
+	$(MAKE) -C $(KDIR) M=$(PWD) clean
+	rm -f *.o *~ .depend .*.cmd *.ko *.mod.c .tmp_versions modules.order Module.symvers
\ No newline at end of file
-- 
2.17.1

